plugins {
    id 'java'
    id 'groovy'
    id 'java-gradle-plugin'
    id "com.gradle.plugin-publish" version "1.0.0-rc-1"
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'pmd'
    id 'codenarc'
    id 'jacoco'
}

ext {
    publishingPath = version.toString().contains("SNAPSHOT") ? 'snapshots' : 'internal'
    pluginDescription = 'The plugin that allows you access to java keytool commands in gradle as task'
}

sourceCompatibility = 1.11

configurations {
    plugin
    implementation.extendsFrom(plugin)

    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
        it.outgoing.artifact(shadowJar)
    }

}

shadowJar {
    configurations = [project.configurations.plugin]
    archiveClassifier.set("")
    relocate 'xyz.ronella.trivial', "${project.group}.shadow.trivial"
    relocate 'xyz.ronella.command.arrays', "${project.group}.shadow.command.arrays"
    minimize()
}

pluginBundle {
    website = 'https://github.com/rcw3bb/simple-keytool'
    vcsUrl = 'https://github.com/rcw3bb/simple-keytool'
    description = pluginDescription
    tags = ['ronella', 'simple-keytool', 'simple', 'keytool', 'java', 'cacert', 'automation',
            'certificate management', 'management', 'security']
}

pmd {
    consoleOutput = true
    toolVersion = "6.46.0"
    rulesMinimumPriority = 5
    ruleSetFiles = files('config/pmd/custom.xml')
    ruleSets = []
}

codenarc {
    toolVersion = "3.1.0"
}

gradlePlugin {
    plugins {
        templateGradlePlugin {
            id = 'xyz.ronella.simple-keytool'
            displayName = 'Simple Keytool Plugin'
            description = pluginDescription
            implementationClass = 'xyz.ronella.gradle.plugin.simple.keytool.SimpleKeytoolPlugin'
        }
    }
}

publishing {
    publications {
        repositories.maven {
            url "https://repo.ronella.xyz/archiva/repository/${publishingPath}/"
            credentials {
                username "${archivaUsername}"
                password "${archivaPassword}"
            }
        }
    }
}

repositories {
    if (Boolean.valueOf(USE_PRIVATE_REPO)) {
        println "Using Private Repository"

        maven {
            url 'https://repo.ronella.xyz/artifactory/java-central'
            credentials {
                username "${artifactoryUsername}"
                password "${artifactoryPassword}"
            }
            mavenContent {
                releasesOnly()
            }
        }
        mavenLocal {
            mavenContent {
                snapshotsOnly()
            }
        }
    }
    else {
        println "Using mavenCentral Repository"
        mavenCentral()
    }
}

dependencies {
    plugin 'xyz.ronella.casual:trivial-chunk:2.10.0'
    plugin 'xyz.ronella.casual:command-arrays:1.0.0'

    implementation gradleApi()
    implementation localGroovy()

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    testImplementation 'org.mockito:mockito-core:4.4.0'
    testImplementation 'org.mockito:mockito-inline:4.4.0'
}

pmdTest.enabled = false
codenarcTest.enabled = false

jar {
    enabled = false
    dependsOn shadowJar
}

test {
    dependsOn pmdMain, codenarcMain
    finalizedBy jacocoTestReport
    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn test
}